{"ast":null,"code":"var _jsxFileName = \"/Users/krishnayadav/Documents/adsmn/face-segmentation-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport segmented_image_face from './segmented_image_face.jpg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [imageUrl, setImageUrl] = useState('');\n  const [segmentedImageUrl, setSegmentedImageUrl] = useState(0);\n  const [file, setFile] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n    setFile(URL.createObjectURL(event.target.files[0]));\n  };\n  console.log(\"selectedFile\", selectedFile);\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert('Please select a file');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      // Upload image to backend and store locally\n      const uploadResponse = await axios.post('http://127.0.0.1:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Get the stored image URL\n      const storedImageUrl = uploadResponse.data.storedImageUrl;\n\n      // Set the stored image URL\n      setImageUrl(storedImageUrl);\n      setSegmentedImageUrl(0);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleSegmentation = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.post('http://127.0.0.1:5000/segment', {\n        imageUrl\n      });\n      if (response.data.segmentedImageUrl) {\n        setSegmentedImageUrl(prev => prev + 1);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  console.log(\"setSegmentedImageUrl\", segmentedImageUrl.name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Face Segmentation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: [file ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: file,\n          width: \"250px\",\n          height: \"250px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange,\n          accept: \"image/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpload,\n          className: \"upload-button\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSegmentation,\n        className: \"upload-button\",\n        children: \"Segment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), segmentedImageUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"segmented-image\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Segmented Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: segmented_image_face,\n        alt: \"Segmented Face\",\n        width: \"500px\",\n        height: \"300px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Q0ikUPCklpLvOyUX3s3DwNu8jww=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","segmented_image_face","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","imageUrl","setImageUrl","segmentedImageUrl","setSegmentedImageUrl","file","setFile","loading","setLoading","handleFileChange","event","target","files","URL","createObjectURL","console","log","handleUpload","alert","formData","FormData","append","uploadResponse","post","headers","storedImageUrl","data","error","handleSegmentation","response","prev","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","width","height","type","onChange","accept","onClick","alt","_c","$RefreshReg$"],"sources":["/Users/krishnayadav/Documents/adsmn/face-segmentation-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport segmented_image_face from './segmented_image_face.jpg';\nimport './App.css';\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [imageUrl, setImageUrl] = useState('');\n  const [segmentedImageUrl, setSegmentedImageUrl] = useState(0);\n  const [file, setFile] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n    setFile(URL.createObjectURL(event.target.files[0]));\n  };\n\n  console.log(\"selectedFile\", selectedFile)\n\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert('Please select a file');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n\n\n    try {\n      // Upload image to backend and store locally\n      const uploadResponse = await axios.post('http://127.0.0.1:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Get the stored image URL\n      const storedImageUrl = uploadResponse.data.storedImageUrl;\n\n      // Set the stored image URL\n      setImageUrl(storedImageUrl);\n      setSegmentedImageUrl(0);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleSegmentation = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.post('http://127.0.0.1:5000/segment', { imageUrl });\n      if (response.data.segmentedImageUrl){\n        setSegmentedImageUrl((prev) => prev + 1)\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  console.log(\"setSegmentedImageUrl\", segmentedImageUrl.name)\n\n  return (\n    <div className=\"container\">\n      <h1>Face Segmentation</h1>\n      <div className=\"form-container\">\n        <div className='upload-container'>\n      {file ? <img src={file} width=\"250px\" height={\"250px\"}/> : null}\n        <input type=\"file\" onChange={handleFileChange} accept=\"image/*\" />\n        <button onClick={handleUpload} className='upload-button'>Upload</button>\n        </div>\n        \n      </div>\n      {imageUrl && (\n        <div className=\"form-container\">\n          <button onClick={handleSegmentation} className='upload-button'>Segment</button>\n        </div>\n      )}\n      {segmentedImageUrl ? (\n        <div className=\"segmented-image\">\n          <h2>Segmented Image</h2>\n          <img src={segmented_image_face} alt=\"Segmented Face\" width=\"500px\" height={\"300px\"}/>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}