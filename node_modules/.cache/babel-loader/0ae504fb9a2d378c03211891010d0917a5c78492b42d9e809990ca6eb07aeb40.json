{"ast":null,"code":"var _jsxFileName = \"/Users/krishnayadav/Documents/adsmn/face-segmentation-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport firebase from 'firebase/app';\nimport 'firebase/storage';\nimport './App.css';\n\n// Initialize Firebase\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  // Your Firebase project configuration goes here\n};\nfirebase.initializeApp(firebaseConfig);\nconst storage = firebase.storage();\nfunction App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [imageUrl, setImageUrl] = useState('');\n  const [segmentedImageUrl, setSegmentedImageUrl] = useState(0);\n  const [file, setFile] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n    setFile(URL.createObjectURL(event.target.files[0]));\n  };\n  console.log(\"selectedFile\", selectedFile);\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert('Please select a file');\n      return;\n    }\n    try {\n      // Upload image to Firebase Storage\n      const storageRef = storage.ref();\n      const imageRef = storageRef.child(`images/${selectedFile.name}`);\n      await imageRef.put(selectedFile);\n\n      // Get the download URL\n      const downloadURL = await imageRef.getDownloadURL();\n\n      // Send the download URL to the backend\n      const response = await axios.post('http://127.0.0.1:5000/upload', {\n        imageUrl: downloadURL\n      });\n\n      // Set the stored image URL\n      setImageUrl(downloadURL);\n      setSegmentedImageUrl(0);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleSegmentation = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.post('http://127.0.0.1:5000/segment', {\n        imageUrl\n      });\n      if (response.data.segmentedImageUrl) {\n        setSegmentedImageUrl(prev => prev + 1);\n        setLoading(false);\n      }\n    } catch (error) {\n      setLoading(false);\n      console.error('Error:', error);\n    }\n  };\n  console.log(\"setSegmentedImageUrl\", segmentedImageUrl.name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Face Segmentation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: [file ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: file,\n          width: \"250px\",\n          height: \"250px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"uploadImage\",\n          className: \"upload-button\",\n          children: [\"Choose File\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleFileChange,\n            accept: \"image/*\",\n            style: {\n              display: 'none'\n            },\n            id: \"uploadImage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpload,\n          className: \"upload-button\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSegmentation,\n        className: \"upload-button\",\n        children: \"Segment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please Wait, Segmenting the Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 18\n    }, this) : null, segmentedImageUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"segmented-image\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Segmented Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: segmented_image_face,\n        alt: \"Segmented Face\",\n        width: \"500px\",\n        height: \"300px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Q0ikUPCklpLvOyUX3s3DwNu8jww=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","firebase","jsxDEV","_jsxDEV","firebaseConfig","initializeApp","storage","App","_s","selectedFile","setSelectedFile","imageUrl","setImageUrl","segmentedImageUrl","setSegmentedImageUrl","file","setFile","loading","setLoading","handleFileChange","event","target","files","URL","createObjectURL","console","log","handleUpload","alert","storageRef","ref","imageRef","child","name","put","downloadURL","getDownloadURL","response","post","error","handleSegmentation","data","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","width","height","htmlFor","type","onChange","accept","style","display","id","onClick","segmented_image_face","alt","_c","$RefreshReg$"],"sources":["/Users/krishnayadav/Documents/adsmn/face-segmentation-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport firebase from 'firebase/app';\nimport 'firebase/storage';\nimport './App.css';\n\n// Initialize Firebase\nconst firebaseConfig = {\n  // Your Firebase project configuration goes here\n};\nfirebase.initializeApp(firebaseConfig);\nconst storage = firebase.storage();\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [imageUrl, setImageUrl] = useState('');\n  const [segmentedImageUrl, setSegmentedImageUrl] = useState(0);\n  const [file, setFile] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n    setFile(URL.createObjectURL(event.target.files[0]));\n  };\n\n  console.log(\"selectedFile\", selectedFile)\n\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert('Please select a file');\n      return;\n    }\n\n    try {\n      // Upload image to Firebase Storage\n      const storageRef = storage.ref();\n      const imageRef = storageRef.child(`images/${selectedFile.name}`);\n      await imageRef.put(selectedFile);\n\n      // Get the download URL\n      const downloadURL = await imageRef.getDownloadURL();\n\n      // Send the download URL to the backend\n      const response = await axios.post('http://127.0.0.1:5000/upload', { imageUrl: downloadURL });\n\n      // Set the stored image URL\n      setImageUrl(downloadURL);\n      setSegmentedImageUrl(0);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleSegmentation = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.post('http://127.0.0.1:5000/segment', { imageUrl });\n      if (response.data.segmentedImageUrl) {\n        setSegmentedImageUrl((prev) => prev + 1);\n        setLoading(false);\n      }\n    } catch (error) {\n      setLoading(false);\n      console.error('Error:', error);\n    }\n  };\n  console.log(\"setSegmentedImageUrl\", segmentedImageUrl.name)\n\n  return (\n    <div className=\"container\">\n      <h1>Face Segmentation</h1>\n      <div className=\"form-container\">\n        <div className='upload-container'>\n          {file ? <img src={file} width=\"250px\" height={\"250px\"} /> : null}\n          <label htmlFor='uploadImage' className='upload-button'>\n            Choose File\n            <input\n              type=\"file\"\n              onChange={handleFileChange}\n              accept=\"image/*\"\n              style={{ display: 'none' }}\n              id=\"uploadImage\"\n            />\n          </label>\n          <button onClick={handleUpload} className='upload-button'>Upload</button>\n        </div>\n      </div>\n      {imageUrl && (\n        <div className=\"form-container\">\n          <button onClick={handleSegmentation} className='upload-button'>Segment</button>\n        </div>\n      )}\n      {loading ? <div>Please Wait, Segmenting the Image</div> : null}\n      {segmentedImageUrl ? (\n        <div className=\"segmented-image\">\n          <h2>Segmented Image</h2>\n          <img src={segmented_image_face} alt=\"Segmented Face\" width=\"500px\" height={\"300px\"} />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}